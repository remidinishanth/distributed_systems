# Name of the workflow
name: Build and Deploy Jekyll Site

# Controls when the workflow will run
on:
  # Runs on pushes targeting the default branch (usually "main")
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Check out your repository's code
      - name: Checkout
        uses: actions/checkout@v4

      # Step 2: Dynamically generate all index pages (README.md files)
      - name: Generate All Index Pages
        run: |
          # === Part A: Generate the ROOT README.md ===
          echo "Generating main README.md..."
          # Start with a clean file and add Jekyll Front Matter
          echo -e "---\nlayout: default\ntitle: Home\n---\n\n# Main Index\n" > README.md
          
          # Add top-level directories to the index
          echo -e "## Directories\n" >> README.md
          for dir in $(find * -maxdepth 0 -type d -not -name '.*' -not -name '_*'); do
            echo "- [${dir}/](${dir}/)" >> README.md
          done
          
          # Add top-level files to the index
          echo -e "\n## Files\n" >> README.md
          for file in $(find * -maxdepth 0 -type f -not -name 'README.md' -not -name '_config.yml' -not -name '.*' -not -name '_*'); do
            echo "- [${file}](${file})" >> README.md
          done

          # === Part B: Generate README.md for SUBDIRECTORIES ===
          echo "Generating READMEs for subdirectories..."
          find . -mindepth 1 -type d -not -path '*/\.*' -not -path './_site*' | while read -r dir; do
            # Only create a README if an index doesn't already exist
            if [ ! -f "$dir/index.md" ] && [ ! -f "$dir/README.md" ]; then
              echo "Creating README for directory: $dir"
              # Start with a clean file and add Jekyll Front Matter
              echo -e "---\nlayout: default\n---\n\n# Index of \`$dir\`\n" > "$dir/README.md"
              
              # Add a link to navigate up to the parent directory
              echo -e "### [../](../)\n" >> "$dir/README.md"
              
              # Add subdirectories
              echo -e "## Directories\n" >> "$dir/README.md"
              for subdir in $(find "$dir" -maxdepth 1 -mindepth 1 -type d); do
                echo "- [$(basename "$subdir")/]($(basename "$subdir")/)" >> "$dir/README.md"
              done
              
              # Add files, including index.md if it exists
              echo -e "\n## Files\n" >> "$dir/README.md"
              for file in $(find "$dir" -maxdepth 1 -type f -not -name 'README.md'); do
                echo "- [$(basename "$file")]($(basename "$file"))" >> "$dir/README.md"
              done
            else
              echo "Skipping directory (index already exists): $dir"
            fi
          done

      # Step 3: Setup GitHub Pages
      - name: Setup Pages
        uses: actions/configure-pages@v5

      # Step 4: Build the site with Jekyll, using the _config.yml
      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./
          destination: ./_site

      # Step 5: Upload the built site as an artifact
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      # Step 6: Deploy the uploaded artifact to GitHub Pages
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
